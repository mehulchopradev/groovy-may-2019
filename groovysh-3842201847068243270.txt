// OPENED: Wed May 15 05:34:51 IST 2019
// RESULT: /var/folders/w3/q6tg9hdn019d3pzd0p1j1j41hfwv9x/T/groovysh-3842201847068243270.txt
def smap = [10: 'mehul', 34: 'jane', 23: 'jill']
// RESULT: [10:mehul, 34:jane, 23:jill]
smap.size()
// RESULT: 3
for(student in smap) {
  println student
}
// RESULT: null
for(student in smap) {
  println student.getClass()
}
// RESULT: null
for(student in smap) {
  println "Name: ${student.value}"
  println "Roll: ${student.key}"
}
// RESULT: null
smap.each {
  println it.getClass()
}
// RESULT: [10:mehul, 34:jane, 23:jill]
smap.each {
  println "Name: ${it.value}"
  println "Roll: ${it.key}"
}
// RESULT: [10:mehul, 34:jane, 23:jill]
smap.each {roll, name -> 
  println "Name : ${name}"
  println "Roll : ${roll}"
}
// RESULT: [10:mehul, 34:jane, 23:jill]
smap
// RESULT: [10:mehul, 34:jane, 23:jill]
smap.values()
// RESULT: [mehul, jane, jill]
smap.keySet()
// RESULT: [10, 34, 23]
smap
// RESULT: [10:mehul, 34:jane, 23:jill]
smap.collect { it.value.toUpperCase() }
// RESULT: [MEHUL, JANE, JILL]
smap
// RESULT: [10:mehul, 34:jane, 23:jill]
def n = smap.collectEntries(key, value -> [key, value.toUpperCase()])
def n = smap.collectEntries {key, value -> [key, value.toUpperCase()]}
// RESULT: [10:MEHUL, 34:JANE, 23:JILL]
def m1 = [4, 3, 1, 5]
// RESULT: [4, 3, 1, 5]
def m2 = [5, 3, 10]
// RESULT: [5, 3, 10]
m1.intersect(m2)
// RESULT: [5, 3]
m1.minus(m2)
// RESULT: [4, 1]
m2.minus(m1)
// RESULT: [10]
m1 - m2
// RESULT: [4, 1]
m2 - m1
// RESULT: [10]
m1 + m2
// RESULT: [4, 3, 1, 5, 5, 3, 10]
m1
// RESULT: [4, 3, 1, 5]
m1.sort()
// RESULT: [1, 3, 4, 5]
m1
// RESULT: [1, 3, 4, 5]
def m1 = [4, 3, 1, 5]
// RESULT: [4, 3, 1, 5]
m1.sort(false)
// RESULT: [1, 3, 4, 5]
m1
// RESULT: [4, 3, 1, 5]
m1
// RESULT: [4, 3, 1, 5]
m1.sort(false) {e1, e2 -> e2.compareTo(e1) }
// RESULT: [5, 4, 3, 1]
m1
// RESULT: [4, 3, 1, 5]
2 ** 3
// RESULT: 8
2 ** 3
// RESULT: 8
:record stop
// CLOSED: Wed May 15 07:30:13 IST 2019
